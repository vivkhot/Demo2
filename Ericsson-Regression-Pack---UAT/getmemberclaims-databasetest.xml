<?xml version="1.0" encoding="UTF-8"?>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getmemberclaims databasetest" searchProperties="true" id="3c260dd9-ecc4-4f00-a598-63fde10e9964" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="3c260dd9-ecc4-4f00-a598-63fde10e9964fileName">getmemberclaims-databasetest</con:setting></con:settings><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="jdbc" name="JDBC Request" id="91208e49-200d-4a98-8e6d-1926d432afbe" disabled="true"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" fetchSize="400" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:swnprod/PASS_VALUE@Stauddbsw24:1521:DONSOS</con:connectionString><con:password>K3ntucky</con:password><con:connectionProperties/><con:query>select unique c1.claim_id, c1.claim_version, c1.TPA_reference, null as bupapreauthreference, claim_status.claim_status_descr,
null as suspendreason, null as suspendreasondescr,c1.member_id, null as claimrecieveddate, c1.claim_hash_total, null as totalpaidamount, c1.Currency_code, null as notes, medical_consents.medical_consent_descr, null as invoices

from claims c1 
inner join 
(select claim_id, max(claim_version) as claim_version from claims group by claim_id) 
c2 on 
c1.claim_id=c2.claim_id and c1.claim_version=c2.claim_version and c1.member_id= :memberid
left join 
claim_status 
on 
c1.claim_status_code=claim_status.claim_status_code
left join
tpa_claim_xref
on
c1.claim_id=tpa_claim_xref.claim_id
left join
medical_consents
on
c1.medical_consent_code=medical_consents.medical_consent_code
order by c1.claim_id asc
</con:query><con:assertion type="JDBC Status" name="JDBC Status" id="e74e0b21-04f7-4b27-8cb9-250b33f4dc1a"/><con:properties><con:property><con:name>memberid</con:name><con:value>BI-6000-0164-6007</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="datasource" name="DataSource" disabled="true" id="ca7f0650-7279-4424-af85-fc881fef54ce"><con:settings/><con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dataSource type="Excel"><con:configuration><file>//gbstafile01-1/home/SHARMAR/Xen/Documents/BIRegression_SOAPUI_Projects/Ericsson/test.xls</file><worksheet>Claims</worksheet><cell>A90</cell><ignoreEmpty>true</ignoreEmpty><evaluateFormulas>false</evaluateFormulas></con:configuration></con:dataSource><con:property>RequestUserName</con:property><con:property>BupaClaimId</con:property><con:property>Version</con:property><con:property>Originating Partner ID</con:property><con:property>PartnerClaimReference</con:property><con:property>BupaPreAuthReference</con:property><con:property>Status</con:property><con:property>SuspendReason</con:property><con:property>BupaMemberId</con:property><con:property>ClaimsRecievedDate</con:property><con:property>TotalClaimedAmount</con:property><con:property>TotalPaidAmount</con:property><con:property>CurrencyCode</con:property><con:property>Notes</con:property><con:property>MedicalRecordConsent</con:property><con:property>InvoiceNumber</con:property><con:property>InvoiceDate</con:property><con:property>BupaProviderId</con:property><con:property>OriginatingPartnerId</con:property><con:property>PartnerReference</con:property><con:property>Name</con:property><con:property>Country Code</con:property><con:property>PayeeType</con:property><con:property>TreatmentCountryCode</con:property><con:property>ClaimedAmount</con:property><con:property>ClaimedCurrencyCode</con:property><con:property>PaidAmount</con:property><con:property>PaidCurrencyCode</con:property><con:property>Item Reference</con:property><con:property>Benefit Code</con:property><con:property>TreatmentFromDate</con:property><con:property>TreatmentToDate</con:property><con:property>NumberOfIncidents</con:property><con:property>InvoiceLineClaimedAmount</con:property><con:property>InvoiceLinePaidAmount</con:property><con:property>RejectionReason</con:property><con:property>RejectionReasonDescription</con:property><con:property>Copay</con:property><con:property>CoInsurance</con:property><con:property>Code</con:property><con:property>Description</con:property><con:property>Standard</con:property><con:property>DiagnosisCode</con:property><con:property>DiagnosisDescription</con:property><con:property>DiagnosisStandard</con:property><con:property>OutputMemberID</con:property><con:property>ClaimOutPut</con:property><con:startRow>0</con:startRow><con:endRow>2000</con:endRow><con:completeLastOperation>true</con:completeLastOperation><con:trimValues>false</con:trimValues><con:entitizeValues>false</con:entitizeValues><con:restartOnRun>false</con:restartOnRun><con:expandProperties>false</con:expandProperties></con:config></con:testStep><con:testStep type="request" name="GetMemberClaims" id="130c065d-2fcb-4cb5-b964-9b4e2a8679a2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_ClaimsServiceInterface</con:interface><con:operation>GetMemberClaims</con:operation><con:request name="GetMemberClaims" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5e4b8071-b1d2-48ab-a6bd-e40ffcb4f942"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://systest2-partners.services-api.bupa-intl.com/BupaPartnerGateway.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:com="urn://com.bupa.bi.claims.GetMemberClaims_v1_0">
  <soapenv:Header>
       <tpa_organization>Test</tpa_organization>
       <tpa_password>4DFE5644-3EB9-437B-9F68-F67B573C6D94</tpa_password>
</soapenv:Header>
   <soapenv:Body>
      <com:MemberClaimsRequest>
         <com:RequestUsername>jtaylor</com:RequestUsername>
         <com:BupaMemberId>BI-6000-0212-4174</com:BupaMemberId>
                   
         
         
         
         
         <!--Optional:-->
         
      </com:MemberClaimsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://bupa.com/ClaimsService:getMemberClaimsIn"/><con:wsrmConfig version="1.2"/><con:environmentSpec><con:entry environmentId="ffa02281-abee-4d92-9d74-c677c51cd899"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="da7c9196-ba3b-41d0-a66d-0a23ca4256ba"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2e2d3644-d234-40cc-bc7a-aa84e98bab33"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="abef8391-6af3-433a-b3bb-9504a88cd8e9"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="6f08d644-a5bc-4490-920b-48a60b2d8e41"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="64e0791f-4ed5-4997-966c-88e83c52740b"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="6f2ca154-2593-4d31-9605-d7f796e04a87"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="5650c0e1-78a8-46fa-87b8-a891fcd675df"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="43d00641-0327-48c2-8143-b4a8c3cc7a15"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="d569c580-5769-4daf-af9e-5bf59356fdbc"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="838914ec-42f6-42ce-a432-f18913224d4a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="4b1f3791-ec46-47c9-a61d-2dad2d67e563"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="ea7ba891-5369-4d68-be76-ff738b357a8d"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="d32ca7f9-7f15-406a-b283-82aea268796e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="472fc935-ce99-435f-a108-237792822ece"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1693b6ef-728c-4bd3-98f6-b40edae1b2a0"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:request></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script1" disabled="true" id="e2c5ed13-3a63-470c-9648-8f8e57d4765a"><con:settings/><con:config><script>/*assertionstep=testRunner.testCase.testSteps["test"]
proassertion=assertionstep.getAssertionByName("XPath Match")
// asseertionstep.addAssertion()

log.info proassertion.setContent()*/

import jxl.*; 
import jxl.write.*
import java.lang.*

ds=testRunner.testCase.testSteps["Export to excel"].dataSink
Workbook workbook1 = Workbook.getWorkbook(new File(ds.getFileName()))
Sheet sheet1 = workbook1.getSheet(0)
x= 0
try{
	Cell firstcell = sheet1.getCell(0,0)
	while(firstcell.getContents()!=null)
	{
		
		try{
		firstcell=sheet1.getCell(0,x)
		log.info "cell A"+(x+1)+" content:"+firstcell.getContents()
		}
		catch(java.lang.ArrayIndexOutOfBoundsException e)
		{
			x++
			break
		}
		x++
	}
	workbook1.close()
	
	ds.setStartCell("A"+x)
}
catch(java.lang.ArrayIndexOutOfBoundsException e)
{
	ds.setStartCell("A1")
}
	

log.info "First Empty Row:"+testRunner.testCase.testSteps["Export to excel"].dataSink.getStartCell()</script></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="ce79d563-c09a-44d2-8ef9-b7a08eb4ef8c"><con:settings/><con:config><script>import groovy.xml.*
import jxl.*
import jxl.write.*
import java.lang.*

//xml parsing setup
def responseAsXml = context.expand( '${JDBC Request#ResponseAsXml#//Results[1]/ResultSet[1]}' )
def response = context.expand( '${GetMemberClaims#Response#declare namespace ns1=\'urn://com.bupa.bi.claims.GetMemberClaims_v1_0\'; //ns1:MemberClaimsResponse[1]/ns1:Claims[1]}' )
def responsexml = new XmlSlurper().parseText(response)
def dbxml = new XmlSlurper().parseText(responseAsXml)
def dbclaimscount= dbxml.children().size()
def responseclaimscount = responsexml.children().size()
def dbfields= dbxml.children()[0].children().size()
def responsefields= responsexml.children()[0].children().size()
assertionstep=testRunner.testCase.testSteps["GetMemberClaims"]



if(dbclaimscount==responseclaimscount)
{
                //excel setup
                WritableWorkbook workbook1 = Workbook.createWorkbook(new File("C:/API/Others/Output Systest1/getmemberclaimresults.xls"))
                WritableSheet sheet1 = workbook1.createSheet("GetMemberClaims Results",0)
                Label rlabel= new Label(1,0, "Response Fields")
                Label dblabel= new Label(2,0, "Database Fields")
                Label vlabel= new Label(3,0, "Verification Result")
                sheet1.addCell(rlabel)
                sheet1.addCell(dblabel)
                sheet1.addCell(vlabel)
                
                log.info "equal claims count of " + dbclaimscount
                def clocation=1

                for( i=0;i&lt;responseclaimscount;i++)
                {
                                log.info "Database Verification of Claim ID:"+responsexml.children()[i].children()[0] 
                                log.info "count="+i
                                def status;
                                for(j=0;j&lt;responsefields;j++)
                                {
                                                responsefield=responsexml.children()[i].children()[j]
                                                dbfield=dbxml.children()[i].children()[j]
                                                def dbvalue=dbfield
                                                log.info responsefield.name()+": "+responsefield+"  "+dbfield.name()+": "+dbvalue
                                                if((responsefield.name()=="TotalPaidAmount")||(responsefield.name()=="TotalClaimedAmount"))
                                                {
                                                                t=dbfield.text()
                                                                if(t!="")
                                                                {              
                                                                                log.info "converting "+ dbfield.name()+" to correct format"
                                                                                dbvalue=t.toDouble()                                                    }
                                                }
                                                if(dbfield.name()=="CLAIMRECEIVEDDATE")
                                                {
                                                                
                                                                dbvalue=dbfield.toString().replaceFirst(" ","T").replaceFirst("00:00:00.0","00:00:00")
                                                }
                                                if(responsefield==dbvalue)
                                                {
                                                                log.info responsefield.name()+" passed verification"
                                                                status="Pass"

                                                }
                                                else
                                                {
                                                                if(responsefield.name()=="Notes")
                                                                {
                                                                                status="N/A"
                                                                }
                                                                else{
                                                                                log.info responsefield.name()+" failed verification"
                                                                                status="Fail"
                                                                }
                                                }
                                                log.info "writing fields to excel"
                                                Label l0= new Label(0,clocation, responsefield.name())
                                                Label l1= new Label(1,clocation,responsefield.toString())
                                                Label l2= new Label(2,clocation,dbvalue.toString())
                                                Label l3= new Label(3,clocation,status)
                                                sheet1.addCell(l0)
                                                sheet1.addCell(l1)
                                                sheet1.addCell(l2)
                                                sheet1.addCell(l3)
                                                clocation++
                                                /*assertion=assertionstep.addAssertion("XPath Match")
                                                assertion.path="\""+responsefield+"\""
                                                assertion.expectedContent=dbfield
                                                assertion.name="Check "+responsefield.name()*/
                                }

                }
                workbook1.write()
                workbook1.close()
                log.info "finished export to excel"
}
</script></con:config></con:testStep><con:setupScript/><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>6c997018-c2da-486a-a1ee-61f5cae2a631</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>4869ae6f-8c48-417b-bbdd-9318919f2e4b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>66daeaca-5ef7-44ea-af38-13d679aa0e8c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>5b172849-985d-405d-8cfd-482f7cc8ab81</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d3614aef-a4b3-4120-bbdd-99eb32b867b2</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:environmentSpec><con:entry environmentId="ffa02281-abee-4d92-9d74-c677c51cd899"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="da7c9196-ba3b-41d0-a66d-0a23ca4256ba"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2e2d3644-d234-40cc-bc7a-aa84e98bab33"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="abef8391-6af3-433a-b3bb-9504a88cd8e9"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="6f08d644-a5bc-4490-920b-48a60b2d8e41"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="64e0791f-4ed5-4997-966c-88e83c52740b"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="6f2ca154-2593-4d31-9605-d7f796e04a87"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="5650c0e1-78a8-46fa-87b8-a891fcd675df"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="43d00641-0327-48c2-8143-b4a8c3cc7a15"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="d569c580-5769-4daf-af9e-5bf59356fdbc"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="838914ec-42f6-42ce-a432-f18913224d4a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="4b1f3791-ec46-47c9-a61d-2dad2d67e563"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="ea7ba891-5369-4d68-be76-ff738b357a8d"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="d32ca7f9-7f15-406a-b283-82aea268796e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="472fc935-ce99-435f-a108-237792822ece"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1693b6ef-728c-4bd3-98f6-b40edae1b2a0"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:testCase>
