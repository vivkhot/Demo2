<?xml version="1.0" encoding="UTF-8"?>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetMemberPreAuths Database TestCase" searchProperties="true" id="4d2c3eb6-9264-40a2-bbbe-ad3ef186ddcb" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="4d2c3eb6-9264-40a2-bbbe-ad3ef186ddcbfileName">GetMemberPreAuths-Database-TestCase</con:setting></con:settings><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="properties" name="" id="b5bfd01f-46ac-41b2-80c2-e2d0e41c16fd"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties/></con:config></con:testStep><con:testStep type="jdbc" name="JDBC Request" id="db094830-0c43-4db5-9919-9c5a5371ecb5"><con:settings><con:setting id="prettyPrintResponse">true</con:setting></con:settings><con:config xsi:type="con:JdbcRequestTestStep" fetchSize="400" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:dbConnectionName xsi:nil="true"/><con:driver>oracle.jdbc.driver.OracleDriver</con:driver><con:connectionString>jdbc:oracle:thin:swnprod/PASS_VALUE@Stauddbsw24:1521:DONSOS</con:connectionString><con:password>swnprod</con:password><con:connectionProperties/><con:query>select distinct prau.pre_auth_id                                                    as      BupaPreAuthId                
,prau.pre_auth_version                                                              as      Version
,prau.member_id                                                                     as      BupaMemberId            
,NVL(tpxr.tpa_preauth_new_ref,tpxr.tpa_preauth_ref)                                 as      PartnerPreAuthReference
,prt.pre_auth_type_descr                                                            as      Type        
,prau.contact_name                                                                  as      ContactName
,null                                                                               as      TreatmentSummary
,prau.procedure_date                                                                               as      ProcedureDate
,prau.consultation_date                                                                               as      ConsultationDate
,coun.country_iso3_code                                                             as      CountryCode
,null                                                                               as      Provider
,prau.doc_spec_name                                                                 as      DoctorDetails
,prau.length_of_stay_req                                                            as      LengthOfStayRequested
,prau.length_of_stay_app                                                            as      LengthOfStayApproved
,prau.original_onset_date                                                           as      OnsetDate
,prau.admission_date                                                                as      AdmissionDate
,prau.discharge_date                                                                as      DischargeDate
,prau.est_cost_of_treatment                                                         as      EstimatedCostOfTreatment
,prau.currency_code                                                                 as      CurrencyCode
,null                                                                               as      GeneralNotes
,COALESCE(tpxr.tpa_diagnosis_code,i.icd10_2010,prau.diagnostic_code) 
 || COALESCE(tpxr.tpa_diagnosis_code_descr,i.icd10_2010_descr,dia.diagnostic_name)  
 || nvl(tpxr.tpa_diagnosis_code_standard,nvl2(i.icd10_2010,'ICD10','ICD9'))         as      Primary_Diagnosis
,nvl(tpxr.tpa_procedure_code,papr.procedure_code) 
 || nvl(tpxr.tpa_procedure_code_descr,proc.procedure_descr)
 || tpxr.tpa_procedure_code_standard                                                as      Primary_Procedure
,tpxr.tpa_procedure_code_2
  || tpxr.tpa_procedure_code_2_descr
  || tpxr.tpa_procedure_code_2_standard                                             as      Secondary_Procedure
,prot.outpatient_type_descr                                                         as      OutpatientType  
,prs.pre_auth_status_descr                                                          as      PreAuthStatus      
,prrr.rejection_reason_descr                                                        as      RejectionReason   
,SUBSTR(prcm.contact_method_descr,1,9)                                                          as      ContactMethod      
,prct.contact_type_descr                                                            as      ContactType         
,prpt.payee_type_descr                                                              as       PayeeType          
from 
pre_auths                       prau
        ,pre_auth_procedures             papr
        ,procedures                      proc
        ,procedures                      proc2
        ,countries                       coun
        ,tpa_preauth_xref                tpxr
        ,pre_auth_status                 prs
        ,pre_auth_types                  prt
        ,pre_auth_contact_methods        prcm
        ,pre_auth_contact_types          prct
        ,pre_auth_payee_types            prpt
        ,pre_auth_rejection_reasons      prrr
        ,pre_auth_outpatient_types       prot
        ,diagnoses                       dia
        ,icd_mapping                     i
where 
prau.member_id =:memberid  
and prau.pre_auth_id =  tpxr.pre_auth_id(+)
and prau.pre_auth_version = tpxr.pre_auth_version(+)
and prau.pre_auth_id = papr.pre_auth_id(+)
and prau.pre_auth_version = papr.pre_auth_version(+)
and papr.procedure_code = proc.procedure_code(+)
and prau.country_code = coun.country_code(+)
and prau.pre_auth_status_code = prs.pre_auth_status_code(+)
and prau.pre_auth_type_code = prt.pre_auth_type_code(+)
and prau.contact_method_code = prcm.contact_method_code(+)
and prau.contact_type_code = prct.contact_type_code(+)
and prau.payee_type_code = prpt.payee_type_code(+)
and prau.rejection_reason_code = prrr.rejection_reason_code(+)
and prau.outpatient_type_code = prot.outpatient_type_code(+)
and prau.diagnostic_code = dia.diagnostic_code(+)  
and prau.diagnostic_code = i.diagnostic_code(+)                             
and prau.pre_auth_version = (SELECT MAX(prau2.pre_auth_version) 
                             FROM   pre_auths prau2 
                             WHERE  prau2.pre_auth_id = prau.pre_auth_id)
order by 
prau.pre_auth_id </con:query><con:assertion type="JDBC Status" name="JDBC Status" id="ba0dc772-c4c6-4a7a-a67f-c1d1950d0ce5"/><con:properties><con:property><con:name>memberid</con:name><con:value>BI-6000-0164-6007</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="GetMemberPreAuths" id="3cd0c7af-fa4e-4753-b029-e11382e1616c"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>BasicHttpBinding_PreAuthServiceInterface</con:interface><con:operation>GetMemberPreAuths</con:operation><con:request name="GetMemberPreAuths" id="d82fe69e-6b27-422a-bdc3-5027968ee154"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://systest2-partners.services-api.bupa-intl.com/BupaPartnerGateway.svc</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:com="urn://com.bupa.bi.preauths.GetMemberPreAuths_v1_0">
  <soapenv:Header>
       <tpa_organization>Test</tpa_organization>
       <tpa_password>3340DmR2jWlX9JQSE5cJfSZuAMErMZq3lsiUr1VI/5c=</tpa_password>
</soapenv:Header>
   <soapenv:Body>
      <com:MemberPreAuthsRequest>
         <com:RequestUsername>SHARMAR</com:RequestUsername>
         <com:BupaMemberId>BI-6000-0000-0280</com:BupaMemberId>
      </com:MemberPreAuthsRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://bupa.com/PreAuthService:getMemberPreAuthsIn" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/><con:environmentSpec><con:entry environmentId="ffa02281-abee-4d92-9d74-c677c51cd899"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="da7c9196-ba3b-41d0-a66d-0a23ca4256ba"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2e2d3644-d234-40cc-bc7a-aa84e98bab33"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="abef8391-6af3-433a-b3bb-9504a88cd8e9"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="6f08d644-a5bc-4490-920b-48a60b2d8e41"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="64e0791f-4ed5-4997-966c-88e83c52740b"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="6f2ca154-2593-4d31-9605-d7f796e04a87"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="5650c0e1-78a8-46fa-87b8-a891fcd675df"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="43d00641-0327-48c2-8143-b4a8c3cc7a15"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="d569c580-5769-4daf-af9e-5bf59356fdbc"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="838914ec-42f6-42ce-a432-f18913224d4a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="4b1f3791-ec46-47c9-a61d-2dad2d67e563"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="ea7ba891-5369-4d68-be76-ff738b357a8d"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="d32ca7f9-7f15-406a-b283-82aea268796e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="472fc935-ce99-435f-a108-237792822ece"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1693b6ef-728c-4bd3-98f6-b40edae1b2a0"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:request></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="7186446a-ca71-4de5-989a-fdca7160eafb"><con:settings/><con:config><script>import groovy.xml.*
import jxl.*
import jxl.write.*
import java.lang.*

//xml parsing setup
def responseAsXml = context.expand( '${JDBC Request#ResponseAsXml#//Results[1]/ResultSet[1]}' )

def response = context.expand( '${GetMemberPreAuths#Response#declare namespace ns1=\'urn://com.bupa.bi.preauths.GetMemberPreAuths_v1_0\'; //ns1:MemberPreAuthsResponse[1]/ns1:PreAuths[1]}' )

def responsexml = new XmlSlurper().parseText(response)
def dbxml = new XmlSlurper().parseText(responseAsXml)
def dbPreAUthscount= dbxml.children().size()
def responsepreAuthscount = responsexml.children().size()
def dbfields= dbxml.children()[0].children().size()
def responsefields= responsexml.children()[0].children().size()
assertionstep=testRunner.testCase.testSteps["GetMemberPreAUths"]



if(dbPreAUthscount==responsepreAuthscount)
{
                //excel setup
                WritableWorkbook workbook1 = Workbook.createWorkbook(new File("C:/API/Others/Output Systest1/getmemberPreAUthresults.xls"))
                WritableSheet sheet1 = workbook1.createSheet("GetMemberPreAuths Results",0)
                Label rlabel= new Label(1,0, "Response Fields")
                Label dblabel= new Label(2,0, "Database Fields")
                Label vlabel= new Label(3,0, "Verification Result")
                sheet1.addCell(rlabel)
                sheet1.addCell(dblabel)
                sheet1.addCell(vlabel)
                
                log.info "equal claims count of " + dbPreAUthscount
                def clocation=1

                for( i=0;i&lt;responsepreAuthscount;i++)
                {
                                log.info "Database Verification of PreAuth ID:"+responsexml.children()[i].children()[0] 
                                log.info "count="+i
                                def status;
                                for(j=0;j&lt;responsefields;j++)
                                {
                                                responsefield=responsexml.children()[i].children()[j]
                                                dbfield=dbxml.children()[i].children()[j]
                                                def dbvalue=dbfield
                                                log.info responsefield.name()+": "+responsefield+"  "+dbfield.name()+": "+dbvalue
                                                if((responsefield.name()=="EstimatedCostOfTreatment"))
                                                {
                                                                t=dbfield.text()
                                                                if(t!="")
                                                                {              
                                                                                log.info "converting "+ dbfield.name()+" to correct format"
                                                                                dbvalue=t.toDouble()                                                    }
                                                }
                                                if((dbfield.name()=="ONSETDATE")||(dbfield.name()=="ADMISSIONDATE")||(dbfield.name()=="DISCHARGEDATE")||(dbfield.name()=="PROCEDUREDATE")||(dbfield.name()=="CONSULTATIONDATE"))
                                                {
                                                                
                                                                dbvalue=dbfield.toString().replaceFirst(" ","T").replaceFirst("00:00:00.0","00:00:00")
                                                }

                                                 if((dbfield.name()=="TYPE"))
                                                {
                                                                
                                                                dbvalue=dbfield.toString().replaceFirst("/","Or").replace(" ","")
                                                }
                                                   if((dbfield.name()=="REJECTIONREASON"))
                                                {
                                                                
                                                                dbvalue=dbfield.toString().replace(" ","")
                                                                
                                                }
                                                
                                                if(responsefield==dbvalue)
                                                {
                                                                log.info responsefield.name()+" passed verification"
                                                                status="Pass"

                                                }
                                                else
                                                {
                                                                if(responsefield.name()=="GeneralNotes")
                                                                {
                                                                                status="N/A"
                                                                }
                                                                else{
                                                                                log.info responsefield.name()+" failed verification"
                                                                                status="Fail"
                                                                }
                                                }
                                                log.info "writing fields to excel"
                                                Label l0= new Label(0,clocation, responsefield.name())
                                                Label l1= new Label(1,clocation,responsefield.toString())
                                                Label l2= new Label(2,clocation,dbvalue.toString())
                                                Label l3= new Label(3,clocation,status)
                                                sheet1.addCell(l0)
                                                sheet1.addCell(l1)
                                                sheet1.addCell(l2)
                                                sheet1.addCell(l3)
                                                clocation++
                                                /*assertion=assertionstep.addAssertion("XPath Match")
                                                assertion.path="\""+responsefield+"\""
                                                assertion.expectedContent=dbfield
                                                assertion.name="Check "+responsefield.name()*/
                                }

                }
                workbook1.write()
                workbook1.close()
                log.info "finished export to excel"
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>77b62efa-28aa-412e-bded-f6fba1343521</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>d3461ad8-0539-4891-8340-38e357392b41</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:environmentSpec><con:entry environmentId="ffa02281-abee-4d92-9d74-c677c51cd899"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="da7c9196-ba3b-41d0-a66d-0a23ca4256ba"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="2e2d3644-d234-40cc-bc7a-aa84e98bab33"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="abef8391-6af3-433a-b3bb-9504a88cd8e9"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="6f08d644-a5bc-4490-920b-48a60b2d8e41"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="64e0791f-4ed5-4997-966c-88e83c52740b"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="6f2ca154-2593-4d31-9605-d7f796e04a87"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="5650c0e1-78a8-46fa-87b8-a891fcd675df"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="43d00641-0327-48c2-8143-b4a8c3cc7a15"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="d569c580-5769-4daf-af9e-5bf59356fdbc"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="838914ec-42f6-42ce-a432-f18913224d4a"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="4b1f3791-ec46-47c9-a61d-2dad2d67e563"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="ea7ba891-5369-4d68-be76-ff738b357a8d"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="d32ca7f9-7f15-406a-b283-82aea268796e"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="472fc935-ce99-435f-a108-237792822ece"><con:authProfile>Inherit From Parent</con:authProfile></con:entry><con:entry environmentId="1693b6ef-728c-4bd3-98f6-b40edae1b2a0"><con:authProfile>Inherit From Parent</con:authProfile></con:entry></con:environmentSpec></con:testCase>
